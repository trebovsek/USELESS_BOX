RCSTM8 COMPILER V2.26.09.317,  STM8S_GPIO         02/16/10  16:41:40

QCW(0x009638A0)

RCSTM8 COMPILER V2.26.09.317, COMPILATION OF MODULE STM8S_GPIO
OBJECT MODULE PLACED IN Debug\stm8s_gpio.o
COMPILER INVOKED BY: OBJECT(Debug\stm8s_gpio.o) PIN(C:\Program Files\Raisonance\Ride\inc\ST7) PIN(C:\Program Files\Raisonance\Ride\inc) WRV(0) STM8(SMALL) DEBUG DGC(page0) AUTO OT(0) PR(Debug\stm8s_gpio.lst) CD CO SB LAOB PIN(..\..\includes) PIN(..\..\..\..\libraries\stm8s_stdperiph_driver\inc) 

stmt level    source
   1          /**
   2            ******************************************************************************
   3            * @file stm8s_gpio.c
   4            * @brief This file contains all the functions for the GPIO peripheral.
   5            * @author STMicroelectronics - MCD Application Team
   6            * @version V1.1.1
   7            * @date 06/05/2009
   8            ******************************************************************************
   9            *
  10            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  11            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  12            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  13            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  14            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  15            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  16            *
  17          	* <h2><center>&copy; COPYRIGHT 2009 STMicroelectronics</center></h2>
  18            * @image html logo.bmp
  19            ******************************************************************************
  20            */
  21          
  22          /* Includes ------------------------------------------------------------------*/
  23          #include "stm8s_gpio.h"
  24          
  25          /* Private typedef -----------------------------------------------------------*/
  26          /* Private define ------------------------------------------------------------*/
  27          /* Private macro -------------------------------------------------------------*/
  28          /* Private variables ---------------------------------------------------------*/
  29          /* Private function prototypes -----------------------------------------------*/
  30          /* Private functions ---------------------------------------------------------*/
  31          
  32          /* Public functions ----------------------------------------------------------*/
  33          
  34          /**
  35            * @addtogroup GPIO_Public_Functions
  36            * @{
  37            */
  38          
  39          /**
  40            * @brief Deinitializes the GPIOx peripheral registers to their default reset
  41            * values.
  42            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
  43            * @retval None
  44            */
  45          void GPIO_DeInit(GPIO_TypeDef* GPIOx)
  46          {
  47   1          GPIOx->ODR = GPIO_ODR_RESET_VALUE; /* Reset Output Data Register */
  48   1          GPIOx->DDR = GPIO_DDR_RESET_VALUE; /* Reset Data Direction Register */
  49   1          GPIOx->CR1 = GPIO_CR1_RESET_VALUE; /* Reset Control Register 1 */
  50   1          GPIOx->CR2 = GPIO_CR2_RESET_VALUE; /* Reset Control Register 2 */
  51   1      }
  52          
  53          /**
  54            * @brief Initializes the GPIOx according to the specified parameters.
  55            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
  56            * @param[in] GPIO_Pin : This parameter contains the pin number, it can be one or many members
  57            * of the @ref GPIO_Pin_TypeDef enumeration.
  58            * @param[in] GPIO_Mode : This parameter can be any of the @Ref GPIO_Mode_TypeDef enumeration.
  59            * @retval None
  60            */
  61          
  62          void GPIO_Init(GPIO_TypeDef* GPIOx,
  63                         GPIO_Pin_TypeDef GPIO_Pin,
  64                         GPIO_Mode_TypeDef GPIO_Mode)
  65          {
  66   1          /*----------------------*/
  67   1          /* Check the parameters */
  68   1          /*----------------------*/
  69   1      
  70   1          assert_param(IS_GPIO_MODE_OK(GPIO_Mode));
  71   1          assert_param(IS_GPIO_PIN_OK(GPIO_Pin));
  72   1      
  73   1          /*-----------------------------*/
  74   1          /* Input/Output mode selection */
  75   1          /*-----------------------------*/
  76   1      
  77   1          if ((((u8)(GPIO_Mode)) & (u8)0x80) != (u8)0x00) /* Output mode */
  78   1          {
  79   2              if ((((u8)(GPIO_Mode)) & (u8)0x10) != (u8)0x00) /* High level */
  80   2              {
  81   3                  GPIOx->ODR |= (u8)GPIO_Pin;
  82   3              } else /* Low level */
  83   2              {
  84   3                  GPIOx->ODR &= (u8)(~(GPIO_Pin));
  85   3              }
  86   2              /* Set Output mode */
  87   2              GPIOx->DDR |= (u8)GPIO_Pin;
  88   2          } else /* Input mode */
  89   1          {
  90   2              /* Set Input mode */
  91   2              GPIOx->DDR &= (u8)(~(GPIO_Pin));
  92   2          }
  93   1      
  94   1          /*------------------------------------------------------------------------*/
  95   1          /* Pull-Up/Float (Input) or Push-Pull/Open-Drain (Output) modes selection */
  96   1          /*------------------------------------------------------------------------*/
  97   1      
  98   1          if ((((u8)(GPIO_Mode)) & (u8)0x40) != (u8)0x00) /* Pull-Up or Push-Pull */
  99   1          {
 100   2              GPIOx->CR1 |= (u8)GPIO_Pin;
 101   2          } else /* Float or Open-Drain */
 102   1          {
 103   2              GPIOx->CR1 &= (u8)(~(GPIO_Pin));
 104   2          }
 105   1      
 106   1          /*-----------------------------------------------------*/
 107   1          /* Interrupt (Input) or Slope (Output) modes selection */
 108   1          /*-----------------------------------------------------*/
 109   1      
 110   1          if ((((u8)(GPIO_Mode)) & (u8)0x20) != (u8)0x00) /* Interrupt or Slow slope */
 111   1          {
 112   2              GPIOx->CR2 |= (u8)GPIO_Pin;
 113   2          } else /* No external interrupt or No slope control */
 114   1          {
 115   2              GPIOx->CR2 &= (u8)(~(GPIO_Pin));
 116   2          }
 117   1      
 118   1      }
 119          
 120          /**
 121            * @brief Writes data to the specified GPIO data port.
 122            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 123            * @param[in] PortVal : Specifies the value to be written to the port output.
 124            * data register.
 125            * @retval None
 126            * @par Required preconditions:
 127            * The port must be configured in output mode.
 128            */
 129          void GPIO_Write(GPIO_TypeDef* GPIOx, u8 PortVal)
 130          {
 131   1          GPIOx->ODR = PortVal;
 132   1      }
 133          
 134          /**
 135            * @brief Writes high level to the specified GPIO pins.
 136            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 137            * @param[in] PortPins : Specifies the pins to be turned high to the port output.
 138            * data register.
 139            * @retval None
 140            * @par Required preconditions:
 141            * The port must be configured in output mode.
 142            */
 143          void GPIO_WriteHigh(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
 144          {
 145   1          GPIOx->ODR |= (u8)PortPins;
 146   1      }
 147          
 148          /**
 149            * @brief Writes low level to the specified GPIO pins.
 150            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 151            * @param[in] PortPins : Specifies the pins to be turned low to the port output.
 152            * data register.
 153            * @retval None
 154            * @par Required preconditions:
 155            * The port must be configured in output mode.
 156            */
 157          void GPIO_WriteLow(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
 158          {
 159   1          GPIOx->ODR &= (u8)(~PortPins);
 160   1      }
 161          
 162          /**
 163            * @brief Writes reverse level to the specified GPIO pins.
 164            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 165            * @param[in] PortPins : Specifies the pins to be reversed to the port output.
 166            * data register.
 167            * @retval None
 168            * @par Required preconditions:
 169            * The port must be configured in output mode.
 170            */
 171          void GPIO_WriteReverse(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
 172          {
 173   1          GPIOx->ODR ^= (u8)PortPins;
 174   1      }
 175          
 176          /**
 177            * @brief Reads the specified GPIO output data port.
 178            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 179            * @retval u8 : GPIO output data port value.
 180            * @par Required preconditions:
 181            * The port must be configured in input mode.
 182            */
 183          u8 GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 184          {
 185   1          return ((u8)GPIOx->ODR);
 186   1      }
 187          
 188          /**
 189            * @brief Reads the specified GPIO input data port.
 190            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 191            * @retval u8 : GPIO input data port value.
 192            * @par Required preconditions:
 193            * The port must be configured in input mode.
 194            */
 195          u8 GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 196          {
 197   1          return ((u8)GPIOx->IDR);
 198   1      }
 199          
 200          /**
 201            * @brief Reads the specified GPIO input data pin.
 202            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 203            * @param[in] GPIO_Pin : This parameter contains the pin number, it can be one member
 204            * of the @ref GPIO_Pin_TypeDef enumeration.
 205            * @retval BitStatus : GPIO input pin status.
 206            * This parameter can be any of the @ref BitStatus enumeration.
 207            * @par Required preconditions:
 208            * The port must be configured in input mode.
 209            */
 210          BitStatus GPIO_ReadInputPin(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
 211          {
 212   1          return ((BitStatus)(GPIOx->IDR & (vu8)GPIO_Pin));
 213   1      }
 214          /**
 215            * @brief Configures the external pull-up on GPIOx pins.
 216            * @param[in] GPIOx : Select the GPIO peripheral number (x = A to I).
 217            * @param[in] GPIO_Pin : This parameter contains the pin number, it can be one or many members
 218            * of the @ref GPIO_Pin_TypeDef enumeration.
 219            * @param[in] NewState : The new state of the pull up pin.
 220            * This parameter can be any of the @ref FunctionalState enumeration.
 221            * @retval None
 222            */
 223          void GPIO_ExternalPullUpConfig(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, FunctionalState NewState)
 224          {
 225   1          /* Check the parameters */
 226   1          assert_param(IS_GPIO_PIN_OK(GPIO_Pin));
 227   1          assert_param(IS_FUNCTIONALSTATE_OK(NewState));
 228   1      
 229   1          if (NewState != DISABLE) /* External Pull-Up Set*/
 230   1          {
 231   2              GPIOx->CR1 |= (u8)GPIO_Pin;
 232   2          } else /* External Pull-Up Reset*/
 233   1          {
 234   2              GPIOx->CR1 &= (u8)(~(GPIO_Pin));
 235   2          }
 236   1      }
 237          
 238          /**
 239            * @}
 240            */
 241          
 242          /******************* (C) COPYRIGHT 2009 STMicroelectronics *****END OF FILE****/
 243          
RCSTM8 COMPILER V2.26.09.317
ASSEMBLY LISTING OF GENERATED OBJECT CODE

              ; FUNCTION ?GPIO_DeInit (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 45 
0000 89                                PUSHW  X
              ; SOURCE LINE # 47 
0001 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0003 A600                              LD     A,#000H
0005 F7                                LD     (X),A
              ; SOURCE LINE # 48 
0006 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0008 1C0002                            ADDW   X,#00002H
000B A600                              LD     A,#000H
000D F7                                LD     (X),A
              ; SOURCE LINE # 49 
000E 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0010 1C0003                            ADDW   X,#00003H
0013 A600                              LD     A,#000H
0015 F7                                LD     (X),A
              ; SOURCE LINE # 50 
0016 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0018 1C0004                            ADDW   X,#00004H
001B A600                              LD     A,#000H
001D F7                                LD     (X),A
001E         ?EPILOG_0000:
001E 85                                POPW   X
001F 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_DeInit (END)

              ; FUNCTION ?GPIO_Init (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 62 
0000 89                                PUSHW  X
              ; SOURCE LINE # 77 
0001 7B08       F                      LD     A,(008H,SP)   ; [ GPIO_Mode + 01H ]
0003 B703       F                      LD     ?BH,A
0005 720F000343 F                      BTJF   ?BH,#007H,?ELSE_0004
              ; SOURCE LINE # 79 
000A 7B08       F                      LD     A,(008H,SP)   ; [ GPIO_Mode + 01H ]
000C B703       F                      LD     ?BH,A
000E 720900030C F                      BTJF   ?BH,#004H,?ELSE_0005
              ; SOURCE LINE # 81 
0013 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0015 F6                                LD     A,(X)
0016 1A06       F                      OR     A,(006H,SP)   ; [ GPIO_Pin + 01H ]
0018 B703       F                      LD     ?BH,A
001A B603       F                      LD     A,?BH
001C F7                                LD     (X),A
001D 201F                              JRA    ?NXT_0005
001F         ?ELSE_0005:
              ; SOURCE LINE # 84 
001F 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0021 89                                PUSHW  X
0022 F6                                LD     A,(X)
0023 88                                PUSH   A
0024 1E08       F                      LDW    X,(008H,SP)   ; [ GPIO_Pin ]
0026 53                                CPLW   X
0027 9F                                LD     A,XL
0028 9097                              LD     YL,A
002A 320003     F                      POP    ?BH
002D 909F                              LD     A,YL
002F B403       F                      AND    A,?BH
0031 B703       F                      LD     ?BH,A
0033 320005     F                      POP    ?CH
0036 320006     F                      POP    ?CL
0039 B603       F                      LD     A,?BH
003B 92C700     F                      LD     [?CH.w],A
003E         ?NXT_0005:
              ; SOURCE LINE # 87 
003E 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0040 1C0002                            ADDW   X,#00002H
0043 F6                                LD     A,(X)
0044 1A06       F                      OR     A,(006H,SP)   ; [ GPIO_Pin + 01H ]
0046 B703       F                      LD     ?BH,A
0048 B603       F                      LD     A,?BH
004A F7                                LD     (X),A
004B 2022                              JRA    ?NXT_0004
004D         ?ELSE_0004:
              ; SOURCE LINE # 91 
004D 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
004F 1C0002                            ADDW   X,#00002H
0052 89                                PUSHW  X
0053 F6                                LD     A,(X)
0054 88                                PUSH   A
0055 1E08       F                      LDW    X,(008H,SP)   ; [ GPIO_Pin ]
0057 53                                CPLW   X
0058 9F                                LD     A,XL
0059 9097                              LD     YL,A
005B 320003     F                      POP    ?BH
005E 909F                              LD     A,YL
0060 B403       F                      AND    A,?BH
0062 B703       F                      LD     ?BH,A
0064 320005     F                      POP    ?CH
0067 320006     F                      POP    ?CL
006A B603       F                      LD     A,?BH
006C 92C700     F                      LD     [?CH.w],A
006F         ?NXT_0004:
              ; SOURCE LINE # 98 
006F 7B08       F                      LD     A,(008H,SP)   ; [ GPIO_Mode + 01H ]
0071 B703       F                      LD     ?BH,A
0073 720D00030F F                      BTJF   ?BH,#006H,?ELSE_0006
              ; SOURCE LINE # 100 
0078 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
007A 1C0003                            ADDW   X,#00003H
007D F6                                LD     A,(X)
007E 1A06       F                      OR     A,(006H,SP)   ; [ GPIO_Pin + 01H ]
0080 B703       F                      LD     ?BH,A
0082 B603       F                      LD     A,?BH
0084 F7                                LD     (X),A
0085 2022                              JRA    ?NXT_0006
0087         ?ELSE_0006:
              ; SOURCE LINE # 103 
0087 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0089 1C0003                            ADDW   X,#00003H
008C 89                                PUSHW  X
008D F6                                LD     A,(X)
008E 88                                PUSH   A
008F 1E08       F                      LDW    X,(008H,SP)   ; [ GPIO_Pin ]
0091 53                                CPLW   X
0092 9F                                LD     A,XL
0093 9097                              LD     YL,A
0095 320003     F                      POP    ?BH
0098 909F                              LD     A,YL
009A B403       F                      AND    A,?BH
009C B703       F                      LD     ?BH,A
009E 320005     F                      POP    ?CH
00A1 320006     F                      POP    ?CL
00A4 B603       F                      LD     A,?BH
00A6 92C700     F                      LD     [?CH.w],A
00A9         ?NXT_0006:
              ; SOURCE LINE # 110 
00A9 7B08       F                      LD     A,(008H,SP)   ; [ GPIO_Mode + 01H ]
00AB B703       F                      LD     ?BH,A
00AD 720B00030F F                      BTJF   ?BH,#005H,?ELSE_0007
              ; SOURCE LINE # 112 
00B2 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
00B4 1C0004                            ADDW   X,#00004H
00B7 F6                                LD     A,(X)
00B8 1A06       F                      OR     A,(006H,SP)   ; [ GPIO_Pin + 01H ]
00BA B703       F                      LD     ?BH,A
00BC B603       F                      LD     A,?BH
00BE F7                                LD     (X),A
00BF 2022                              JRA    ?NXT_0007
00C1         ?ELSE_0007:
              ; SOURCE LINE # 115 
00C1 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
00C3 1C0004                            ADDW   X,#00004H
00C6 89                                PUSHW  X
00C7 F6                                LD     A,(X)
00C8 88                                PUSH   A
00C9 1E08       F                      LDW    X,(008H,SP)   ; [ GPIO_Pin ]
00CB 53                                CPLW   X
00CC 9F                                LD     A,XL
00CD 9097                              LD     YL,A
00CF 320003     F                      POP    ?BH
00D2 909F                              LD     A,YL
00D4 B403       F                      AND    A,?BH
00D6 B703       F                      LD     ?BH,A
00D8 320005     F                      POP    ?CH
00DB 320006     F                      POP    ?CL
00DE B603       F                      LD     A,?BH
00E0 92C700     F                      LD     [?CH.w],A
00E3         ?NXT_0007:

00E3         ?EPILOG_0001:
00E3 85                                POPW   X
00E4 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; GPIO_Pin     (size=2).  parameter in AUTO
              ; GPIO_Mode    (size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_Init (END)

              ; FUNCTION ?GPIO_Write (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; Register-parameter PortVal (A) is relocated (auto)
              ; SOURCE LINE # 129 
0000 89                                PUSHW  X
0001 88                                PUSH   A
              ; SOURCE LINE # 131 
0002 1E02       F                      LDW    X,(002H,SP)   ; [ GPIOx ]
0004 7B01       F                      LD     A,(001H,SP)   ; [ PortVal ]
0006 F7                                LD     (X),A
0007         ?EPILOG_0002:
0007 5B03                              ADD    SP,#003H
0009 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; PortVal      unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?GPIO_Write (END)

              ; FUNCTION ?GPIO_WriteHigh (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 143 
0000 89                                PUSHW  X
              ; SOURCE LINE # 145 
0001 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0003 F6                                LD     A,(X)
0004 1A06       F                      OR     A,(006H,SP)   ; [ PortPins + 01H ]
0006 B703       F                      LD     ?BH,A
0008 B603       F                      LD     A,?BH
000A F7                                LD     (X),A
000B         ?EPILOG_0003:
000B 85                                POPW   X
000C 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; PortPins     (size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_WriteHigh (END)

              ; FUNCTION ?GPIO_WriteLow (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 157 
0000 89                                PUSHW  X
              ; SOURCE LINE # 159 
0001 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0003 89                                PUSHW  X
0004 F6                                LD     A,(X)
0005 88                                PUSH   A
0006 1E08       F                      LDW    X,(008H,SP)   ; [ PortPins ]
0008 53                                CPLW   X
0009 9F                                LD     A,XL
000A 9097                              LD     YL,A
000C 320003     F                      POP    ?BH
000F 909F                              LD     A,YL
0011 B403       F                      AND    A,?BH
0013 B703       F                      LD     ?BH,A
0015 320005     F                      POP    ?CH
0018 320006     F                      POP    ?CL
001B B603       F                      LD     A,?BH
001D 92C700     F                      LD     [?CH.w],A
0020         ?EPILOG_0004:
0020 85                                POPW   X
0021 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; PortPins     (size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_WriteLow (END)

              ; FUNCTION ?GPIO_WriteReverse (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 171 
0000 89                                PUSHW  X
              ; SOURCE LINE # 173 
0001 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0003 F6                                LD     A,(X)
0004 1806       F                      XOR    A,(006H,SP)   ; [ PortPins + 01H ]
0006 B703       F                      LD     ?BH,A
0008 B603       F                      LD     A,?BH
000A F7                                LD     (X),A
000B         ?EPILOG_0005:
000B 85                                POPW   X
000C 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; PortPins     (size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_WriteReverse (END)

              ; FUNCTION ?GPIO_ReadOutputData (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 183 
0000 89                                PUSHW  X
              ; SOURCE LINE # 185 
0001 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0003 F6                                LD     A,(X)
0004         ?EPILOG_0006:
0004 85                                POPW   X
0005 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_ReadOutputData (END)

              ; FUNCTION ?GPIO_ReadInputData (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 195 
0000 89                                PUSHW  X
              ; SOURCE LINE # 197 
0001 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0003 1C0001                            ADDW   X,#00001H
0006 F6                                LD     A,(X)
0007         ?EPILOG_0007:
0007 85                                POPW   X
0008 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_ReadInputData (END)

              ; FUNCTION ?GPIO_ReadInputPin (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 210 
0000 89                                PUSHW  X
              ; SOURCE LINE # 212 
0001 5F                                CLRW   X
0002 7B06       F                      LD     A,(006H,SP)   ; [ GPIO_Pin + 01H ]
0004 97                                LD     XL,A
0005 89                                PUSHW  X
0006 1E03       F                      LDW    X,(003H,SP)   ; [ GPIOx ]
0008 1C0001                            ADDW   X,#00001H
000B 905F                              CLRW   Y
000D F6                                LD     A,(X)
000E 9097                              LD     YL,A
0010 90BF02     F                      LDW    ?BH.w,Y
0013 85                                POPW   X
0014 BF03       F                      LDW    ?CH.w,X
0016 B606       F                      LD     A,?CL
0018 B404       F                      AND    A,?BL
001A 88                                PUSH   A
001B B605       F                      LD     A,?CH
001D B403       F                      AND    A,?BH
001F B703       F                      LD     ?BH,A
0021 84                                POP    A
0022 B704       F                      LD     ?BL,A
0024 BE02       F                      LDW    X,?BH.w
0026         ?EPILOG_0008:
0026 5B02                              ADD    SP,#002H
0028 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; GPIO_Pin     (size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_ReadInputPin (END)

              ; FUNCTION ?GPIO_ExternalPullUpConfig (BEGIN)
              ; Register-parameter GPIOx (XW) is relocated (auto)
              ; SOURCE LINE # 223 
0000 89                                PUSHW  X
              ; SOURCE LINE # 229 
0001 1E07       F                      LDW    X,(007H,SP)   ; [ NewState ]
0003 270F                              JREQ   ?ELSE_0009
              ; SOURCE LINE # 231 
0005 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0007 1C0003                            ADDW   X,#00003H
000A F6                                LD     A,(X)
000B 1A06       F                      OR     A,(006H,SP)   ; [ GPIO_Pin + 01H ]
000D B703       F                      LD     ?BH,A
000F B603       F                      LD     A,?BH
0011 F7                                LD     (X),A
0012 2022                              JRA    ?NXT_0009
0014         ?ELSE_0009:
              ; SOURCE LINE # 234 
0014 1E01       F                      LDW    X,(001H,SP)   ; [ GPIOx ]
0016 1C0003                            ADDW   X,#00003H
0019 89                                PUSHW  X
001A F6                                LD     A,(X)
001B 88                                PUSH   A
001C 1E08       F                      LDW    X,(008H,SP)   ; [ GPIO_Pin ]
001E 53                                CPLW   X
001F 9F                                LD     A,XL
0020 9097                              LD     YL,A
0022 320003     F                      POP    ?BH
0025 909F                              LD     A,YL
0027 B403       F                      AND    A,?BH
0029 B703       F                      LD     ?BH,A
002B 320005     F                      POP    ?CH
002E 320006     F                      POP    ?CL
0031 B603       F                      LD     A,?BH
0033 92C700     F                      LD     [?CH.w],A
0036         ?NXT_0009:

0036         ?EPILOG_0009:
0036 85                                POPW   X
0037 81                                RET    
              ; GPIOx        pointer to ( GPIO_struct-struct (size=5) in )(size=2).  parameter in AUTO
              ; GPIO_Pin     (size=2).  parameter in AUTO
              ; NewState     (size=2).  parameter in AUTO

              ; FUNCTION ?GPIO_ExternalPullUpConfig (END)

RCSTM8 COMPILER V2.26.09.317
NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

FALSE. . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TRUE . . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
RESET. . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SET. . . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
DISABLE. . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
ENABLE . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
ERROR. . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SUCCESS. . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     5
  ODR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IDR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  DDR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
ADC1_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    48
  DB0RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DB0RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  DB1RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  DB1RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  DB2RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  DB2RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  DB3RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  DB3RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  DB4RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  DB4RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  DB5RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  DB5RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  DB6RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  DB6RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  DB7RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  DB7RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  DB8RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  DB8RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  DB9RH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  DB9RL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   ARRAY   000014H    12
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000020H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000021H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000022H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000023H     1
  DRH. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000024H     1
  DRL. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000025H     1
  TDRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000026H     1
  TDRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000027H     1
  HTRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000028H     1
  HTRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000029H     1
  LTRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00002AH     1
  LTRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00002BH     1
  AWSRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00002CH     1
  AWSRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00002DH     1
  AWCRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00002EH     1
  AWCRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00002FH     1
AWU_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     3
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  APR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  TBR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
BEEP_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     1
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
CLK_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    14
  ICKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  ECKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  CMSR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SWR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SWCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CKDIVR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PCKENR1. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CSSR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCOR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PCKENR2. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CANCCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  HSITRIMR . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  SWIMCCR. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
TIM1_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    32
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  ETR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCMR4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  PSCRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  PSCRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  RCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000015H     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000016H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000017H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000018H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000019H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001AH     1
  CCR4H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001BH     1
  CCR4L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001CH     1
  BKR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001DH     1
  DTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001EH     1
  OISR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001FH     1
TIM2_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    21
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
TIM3_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    17
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
TIM4_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     7
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CNTR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  ARR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
TIM5_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    23
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000015H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000016H     1
TIM6_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     9
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CNTR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  ARR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
I2C_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    15
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  FREQR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  OARL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  OARH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  SR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  ITR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CCRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  TRISER . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
ITC_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     8
  ISPR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  ISPR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  ISPR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  ISPR4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  ISPR5. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  ISPR6. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  ISPR7. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  ISPR8. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
EXTI_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     2
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
FLASH_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    11
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  NCR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  FPR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  NFPR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  IAPSR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  PUKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  RESERVED3. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  DUKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
OPT_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    15
  OPT0 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  OPT1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  NOPT1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  OPT2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  NOPT2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  OPT3 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  NOPT3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  OPT4 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  NOPT4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  OPT5 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  NOPT5. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  OPT7 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  NOPT7. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
IWDG_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     3
  KR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  PR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  RLR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
WWDG_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     2
  CR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  WR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
RST_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     1
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
SPI_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     8
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  ICR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CRCPR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  RXCRCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  TXCRCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
SWIM_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     2
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
UART1_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    11
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CR5. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  GTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
UART2_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    12
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CR5. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CR6. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  GTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
UART3_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    10
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CR6. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
CFG_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     1
  GCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
BEEP_FREQUENCY_1KHZ. . . . . . . . . . E_CONST  ----- INT      -------  2
BEEP_FREQUENCY_2KHZ. . . . . . . . . . E_CONST  ----- INT      -------  2
BEEP_FREQUENCY_4KHZ. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWITCHMODE_MANUAL. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWITCHMODE_AUTO. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CURRENTCLOCKSTATE_DISABLE. . . . . E_CONST  ----- INT      -------  2
CLK_CURRENTCLOCKSTATE_ENABLE . . . . . E_CONST  ----- INT      -------  2
CLK_CSSCONFIG_ENABLEWITHIT . . . . . . E_CONST  ----- INT      -------  2
CLK_CSSCONFIG_ENABLE . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CSSCONFIG_DISABLE. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SOURCE_HSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SOURCE_LSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SOURCE_HSE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_0 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_1 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_2 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_3 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_4 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_5 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_6 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_7 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_HSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_LSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_HSE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPU . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV2 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV4 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV8 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV16. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV32. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV64. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_HSIRC . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_MASTER. . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_OTHERS. . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_I2C . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_SPI . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_UART1 . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_UART2 . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_UART3 . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER6. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER4. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER5. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER2. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER3. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER1. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_AWU . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_ADC . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_CAN . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_LSIRDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_HSIRDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_HSERDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_SWIF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_SWBSY . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_CSSD. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_AUX . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_CCOBSY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_CCORDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_IT_CSSD. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_IT_SWIF. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV1. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV2. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV4. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV8. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV1. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV2. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV4. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV8. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV16 . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV32 . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV64 . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV128. . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWIMDIVIDER_2. . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWIMDIVIDER_OTHER. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_1 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_2 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_3 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_4 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_5 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_6 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_7 . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CANDIVIDER_8 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_FORCEDACTION_ACTIVE . . . . . . . E_CONST  ----- INT      -------  2
TIM3_FORCEDACTION_INACTIVE . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_1 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_2 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_4 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_8 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_16. . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_32. . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_64. . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_128 . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_256 . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_512 . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_1024. . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_2048. . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_4096. . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_8192. . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_16384 . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PRESCALER_32768 . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCMODE_TIMING . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCMODE_ACTIVE . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCMODE_INACTIVE . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCMODE_TOGGLE . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCMODE_PWM1 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCMODE_PWM2 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OPMODE_SINGLE . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OPMODE_REPETITIVE . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_CHANNEL_1 . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_CHANNEL_2 . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCPOLARITY_HIGH . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OCPOLARITY_LOW. . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OUTPUTSTATE_DISABLE . . . . . . . E_CONST  ----- INT      -------  2
TIM3_OUTPUTSTATE_ENABLE. . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICPOLARITY_RISING . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICPOLARITY_FALLING. . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICSELECTION_DIRECTTI. . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICSELECTION_INDIRECTTI. . . . . . E_CONST  ----- INT      -------  2
TIM3_ICSELECTION_TRGI. . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICPSC_DIV1. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICPSC_DIV2. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICPSC_DIV4. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_ICPSC_DIV8. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_IT_UPDATE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_IT_CC1. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_IT_CC2. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_PSCRELOADMODE_UPDATE. . . . . . . E_CONST  ----- INT      -------  2
TIM3_PSCRELOADMODE_IMMEDIATE . . . . . E_CONST  ----- INT      -------  2
TIM3_EVENTSOURCE_UPDATE. . . . . . . . E_CONST  ----- INT      -------  2
TIM3_EVENTSOURCE_CC1 . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_EVENTSOURCE_CC2 . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_UPDATESOURCE_GLOBAL . . . . . . . E_CONST  ----- INT      -------  2
TIM3_UPDATESOURCE_REGULAR. . . . . . . E_CONST  ----- INT      -------  2
TIM3_FLAG_UPDATE . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_FLAG_CC1. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_FLAG_CC2. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_FLAG_CC1OF. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM3_FLAG_CC2OF. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IRDAMODE_NORMAL. . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IRDAMODE_LOWPOWER. . . . . . . . E_CONST  ----- INT      -------  2
UART2_WAKEUP_IDLELINE. . . . . . . . . E_CONST  ----- INT      -------  2
UART2_WAKEUP_ADDRESSMARK . . . . . . . E_CONST  ----- INT      -------  2
UART2_LINBREAKDETECTIONLENGTH_10BITS . E_CONST  ----- INT      -------  2
UART2_LINBREAKDETECTIONLENGTH_11BITS . E_CONST  ----- INT      -------  2
UART2_STOPBITS_1 . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_STOPBITS_0_5 . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_STOPBITS_2 . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_STOPBITS_1_5 . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_PARITY_NO. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_PARITY_EVEN. . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_PARITY_ODD . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_LIN_MODE_MASTER. . . . . . . . . E_CONST  ----- INT      -------  2
UART2_LIN_MODE_SLAVE . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_LIN_AUTOSYNC_DISABLE . . . . . . E_CONST  ----- INT      -------  2
UART2_LIN_AUTOSYNC_ENABLE. . . . . . . E_CONST  ----- INT      -------  2
UART2_LIN_DIVUP_LBRR1. . . . . . . . . E_CONST  ----- INT      -------  2
UART2_LIN_DIVUP_NEXTRXNE . . . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_CLOCK_DISABLE . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_CLOCK_ENABLE. . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_CPOL_LOW. . . . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_CPOL_HIGH . . . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_CPHA_MIDDLE . . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_CPHA_BEGINING . . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_LASTBIT_DISABLE . . . . E_CONST  ----- INT      -------  2
UART2_SYNCMODE_LASTBIT_ENABLE. . . . . E_CONST  ----- INT      -------  2
UART2_WORDLENGTH_8D. . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_WORDLENGTH_9D. . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_MODE_RX_ENABLE . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_MODE_TX_ENABLE . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_MODE_TX_DISABLE. . . . . . . . . E_CONST  ----- INT      -------  2
UART2_MODE_RX_DISABLE. . . . . . . . . E_CONST  ----- INT      -------  2
UART2_MODE_TXRX_ENABLE . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_TXE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_TC. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_RXNE. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_IDLE. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_OR_LHE. . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_NF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_FE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_PE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_SBK . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_LBDF. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_LHDF. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_FLAG_LSF . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_TXE . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_TC. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_RXNE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_IDLE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_OR. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_PE. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_LBDF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_LHDF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART2_IT_RXNE_OR . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_FL_NO_IT. . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_PU_NO_IT. . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_FL_IT . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_PU_IT . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_LOW_FAST. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_LOW_FAST. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_LOW_SLOW. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_LOW_SLOW. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_HIZ_FAST. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_HIGH_FAST . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_HIZ_SLOW. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_HIGH_SLOW . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_0 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_1 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_2 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_3 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_4 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_5 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_6 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_7 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_LNIB. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_HNIB. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_ALL . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_DeInit. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?224 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
GPIO_Init. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?225 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
 GPIO_Pin?226. . . . . . . . . . . . .  PARAM    auto    ENUM    000004H 2      
 GPIO_Mode?227 . . . . . . . . . . . .  PARAM    auto    ENUM    000006H 2      
GPIO_Write . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?228 . . . . . . . . . . . . . .  PARAM    auto    PTR     000001H 2      
 PortVal?229 . . . . . . . . . . . . .  PARAM    auto    U_CHAR  000000H 1      
GPIO_WriteHigh . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?230 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
 PortPins?231. . . . . . . . . . . . .  PARAM    auto    ENUM    000004H 2      
GPIO_WriteLow. . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?232 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
 PortPins?233. . . . . . . . . . . . .  PARAM    auto    ENUM    000004H 2      
GPIO_WriteReverse. . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?234 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
 PortPins?235. . . . . . . . . . . . .  PARAM    auto    ENUM    000004H 2      
GPIO_ReadOutputData. . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?236 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
GPIO_ReadInputData . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?237 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
GPIO_ReadInputPin. . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?238 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
 GPIO_Pin?239. . . . . . . . . . . . .  PARAM    auto    ENUM    000004H 2      
GPIO_ExternalPullUpConfig. . . . . . .  PUBLIC  CODE    PROC    ------- -----
 GPIOx?240 . . . . . . . . . . . . . .  PARAM    auto    PTR     000000H 2      
 GPIO_Pin?241. . . . . . . . . . . . .  PARAM    auto    ENUM    000004H 2      
 NewState?242. . . . . . . . . . . . .  PARAM    auto    ENUM    000006H 2      
?BH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?CH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?CL. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?BL. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RCSTM8 COMPILER V2.26.09.317


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =   ----    ----
   DATA SIZE        =   ----    ----
   PAGE0 SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RCSTM8 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
